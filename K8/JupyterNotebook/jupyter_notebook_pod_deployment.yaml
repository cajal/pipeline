apiVersion: v1 # Jobs Default K8 API
kind: Pod # This tells kubernetes what kind of class it is working with
metadata:
  name: pipeline-jupyter #
  labels:
    app: pipeline-jupyter # Reference this in your service
spec:
  restartPolicy: Never # Options are OnFailure, and Never.
  volumes:
  - name: mnt
    hostPath:
      path: /mnt # Directory on the host machine to be mounted
  containers: # Container Level
  - name: pipeline # Container name (Can be set to whatever)
    image: ninai/pipeline:latest # Docker Image hosted on Docker Hub
    ports:
    - containerPort: 8888
    volumeMounts: # Container reference to volumes define above
    - name: mnt # Name of the volume define above
      mountPath: /mnt # Location of where to mount it in the container
    env: # This section refers to secrets created under the user namespace and set them as enviorment variables
    - name: DJ_HOST
      valueFrom:
        secretKeyRef:
          name: datajoint-credentials
          key: DJ_HOST
    - name: DJ_USER
      valueFrom:
        secretKeyRef:
          name: datajoint-credentials
          key: DJ_USER
    - name: DJ_PASS
      valueFrom:
        secretKeyRef:
          name: datajoint-credentials
          key: DJ_PASS
    - name: GITHUB_USERNAME
      valueFrom:
        secretKeyRef:
          name: github-credentials
          key: GITHUB_USERNAME
    - name: GITHUB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: github-credentials
          key: GITHUB_PASSWORD
    workingDir: /src
    command: ["/bin/bash"] # Entry point for the container
    # Override the git pull below to pull your own fork, otherwise it clones the default master one from Cajal
    args: ["-c", "pip3 install jupyter &&\
    rm -r /data &&\
    git clone https://$(GITHUB_USERNAME):$(GITHUB_PASSWORD)@github.com/cajal/pipeline.git &&\
    jupyter notebook --ip='*' --port=8888 --allow-root --no-browser --NotebookApp.token=${GITHUB_PASSWORD}"] 

---

# This is the node port service. After deployment run kubectl get svc to get the nodeport that was assign to this pod then go do <master-host-name>:<port-number> (should be in the range of 30000-32767)
kind: Service
apiVersion: v1
metadata:
  name: pipeline-jupyter
spec:
  type: NodePort
  selector:
    app: pipeline-jupyter
  ports:
  - protocol: TCP
    port: 8888
    targetPort: 8888 